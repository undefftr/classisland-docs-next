import{_ as h}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as i,b as s,d as a,w as n,e as t,r as l,o as p}from"./app-Clxb9NYX.js";const o={},c=i("h1",{id:"开发-uri-导航",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#开发-uri-导航"},[i("span",null,"开发 Uri 导航")])],-1),k={class:"hint-container info"},g=i("p",{class:"hint-container-title"},"相关信息",-1),v=i("p",null,"ClassIsland 支持通过 Uri 进行应用内导航，同时也支持注册系统 Url 协议，从应用外部打开特定的 Uri。",-1),A=i("p",null,[s("本文将介绍如何通过 "),i("code",null,"UriNavigationService"),s(" 来注册您自定义的 Uri 和导航事件处理方法来处理导航，以及如何在 UI 上通过命令和直接调用导航服务进行导航。")],-1),B=i("p",null,[s("ClassIsland 的 Uri 导航协议是 "),i("code",null,"classisland://"),s("。")],-1),y=i("h2",{id:"注册导航",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#注册导航"},[i("span",null,"注册导航")])],-1),u=i("code",null,"ClassIsland.Core.Abstractions.Services.IUriNavigationService",-1),m=t(`<div class="hint-container info"><p class="hint-container-title">相关信息</p><p>在本文的代码中，我们假定将获取到的服务存储在了属性 <code>UriNavigationService</code> 中。</p></div><p>接下来我们注册路径 <code>foo/bar</code> 的处理程序：</p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">UriNavigationService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">HandlePluginsNavigation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;foo/bar&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        CommonDialog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ShowInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">$&quot;Hello world! {</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">args</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Uri</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的代码中，我们使用 <code>HandlePluginsNavigation</code> 方法注册了处理导航到路径 <code>foo/bar</code> 的处理程序。当导航到这个 Uri <code>classisland://plugins/foo/bar</code> 时，会运行传入的处理程序，显示对话框。在事件处理程序中可以通过参数 <code>args</code> 获取原始导航的 Uri 和原始 Uri 相对当前注册的路径的子路径。</p><p>使用 <code>HandlePluginsNavigation</code> 方法注册的 Uri 的主机是 <code>plugins</code>，也就是专门为插件预留的导航主机。如果要注册到 <code>app</code> 或其他主机下，请使用 <code>HandleAppNavigation</code> 方法。</p><div class="hint-container note"><p class="hint-container-title">注</p><p><code>HandleAppNavigation</code>等方法具有 <code>internal</code> 保护，只有从 ClassIsland 内部才能注册到 <code>app</code> 和自定义主机下。插件中只能使用 <code>HandlePluginsNavigation</code> 方法注册到 <code>plugins</code> 主机下。</p></div><h2 id="导航" tabindex="-1"><a class="header-anchor" href="#导航"><span>导航</span></a></h2><p>在导航到某个 Uri 时，ClassIsland 会首先尝试导航到指定的路径下。如果这个路径下没有注册处理方法，会逐步向上级导航，直到根目录。</p>`,8),F=t(`<div class="hint-container info"><p class="hint-container-title">举个栗子</p><p>假设我们注册到了路径 <code>hello_world/hello_world</code>。当向 <code>hello_world/hello_world/foo_bar</code> 导航时，由于这个路径还未被注册，会导航到上一级 <code>hello_world/hello_world</code>，并触发对应的事件处理程序。</p></div><p>以下有几种进行导航的方式：</p><h3 id="通过-navhyperlink" tabindex="-1"><a class="header-anchor" href="#通过-navhyperlink"><span>通过 <code>NavHyperlink</code></span></a></h3><p><code>NavHyperlink</code> 继承于 <code>Hyerlink</code>，具有后者类似的外观与体验，可以插入到 <code>TextBlock</code> 或 <code>FlowDocument</code> 等中，实现 Uri 导航。</p><p>要使用 <code>NavHyperlink</code> 导航，需要将 <code>NavigateTarget</code> 属性设置为要导航到的 Uri，例如：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TextBlock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ci:NavHyperlink</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> NavigateTarget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://cn.bing.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Test link 1&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ci:NavHyperlink</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ci:NavHyperlink</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> NavigateTarget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;classisland://app/test&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Test link 2&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ci:NavHyperlink</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TextBlock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="通过代码导航" tabindex="-1"><a class="header-anchor" href="#通过代码导航"><span>通过代码导航</span></a></h3><p>调用 <code>IUriNavigationService.Navigate</code> 方法可以导航到指定的 Uri。如果要导航的 Uri 协议不是 <code>classisland://</code>，ClassIsland 会自动调用系统中最合适的应用处理这个 Uri。</p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 打开导航测试窗口</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">UriNavigationService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Navigate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;classisland://app/test&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 在系统浏览器中打开 ClassIsland 官网</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">UriNavigationService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Navigate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://classisland.tech&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="从外部调用" tabindex="-1"><a class="header-anchor" href="#从外部调用"><span>从外部调用</span></a></h3><p>如果 ClassIsland 在系统上注册了 <code>classisland://</code> 链接的打开方式，那么在浏览器等地方打开这种协议的链接时，ClassIsland 可以在应用中导航到对应的 Uri 处理程序上。</p><p>例如：<a href="classisland://app/test" target="_blank" rel="noopener noreferrer">classisland://app/test</a></p>`,12);function b(U,C){const e=l("RouteLink"),r=l("Mermaid");return p(),d("div",null,[c,i("div",k,[g,i("p",null,[s("本文章主要讲述开发人员如何注册自定义的 Uri 导航。如果您想了解应用内置的 Uri 导航路径，请参阅"),a(e,{to:"/app/uri-navigation.html"},{default:n(()=>[s("Uri 导航")]),_:1}),s("。")])]),v,A,B,y,i("p",null,[s("要注册导航，您首先需要获取服务 "),u,s("。获取服务的详细方法见"),a(e,{to:"/dev/basics.html#dependency-injection"},{default:n(()=>[s("基础知识")]),_:1}),s("。")]),m,a(r,{id:"mermaid-49",code:"eJxLy8kvT85ILCpR8AniUgACp9T0zDy/xLLM9MSSzPy8aKWnexqeLu9+un7Pi45VSrEKurp2Cp7FrhWZxSXVSs9nr3u2oP3F9vVP97U8m7H+6YRlT9fOeDpnxfs985VqFUBqa5QgIko1ClBDU1OAZoJNe9Yx4WnXfKCZYIuhhkI0PdnRC9fnlJicDdSyYe6L9VMhGp92bHiyo+v5ruVA+5/unQp3VVB+PtBRQNkX+/Y9W7ATIgtxC9hUoBOB5rklZuYgHPF0ycYXW5YqxULdADICbBrQ4ROWAVVDncUFAH7Hjyg="}),F])}const N=h(o,[["render",b],["__file","uri-navigation.html.vue"]]),x=JSON.parse('{"path":"/dev/uri-navigation.html","title":"开发 Uri 导航","lang":"zh-CN","frontmatter":{"description":"开发 Uri 导航 相关信息 本文章主要讲述开发人员如何注册自定义的 Uri 导航。如果您想了解应用内置的 Uri 导航路径，请参阅。 ClassIsland 支持通过 Uri 进行应用内导航，同时也支持注册系统 Url 协议，从应用外部打开特定的 Uri。 本文将介绍如何通过 UriNavigationService 来注册您自定义的 Uri 和导航...","head":[["meta",{"property":"og:url","content":"https://classisland.github.io/classisland-docs-next/dev/uri-navigation.html"}],["meta",{"property":"og:site_name","content":"ClassIsland文档"}],["meta",{"property":"og:title","content":"开发 Uri 导航"}],["meta",{"property":"og:description","content":"开发 Uri 导航 相关信息 本文章主要讲述开发人员如何注册自定义的 Uri 导航。如果您想了解应用内置的 Uri 导航路径，请参阅。 ClassIsland 支持通过 Uri 进行应用内导航，同时也支持注册系统 Url 协议，从应用外部打开特定的 Uri。 本文将介绍如何通过 UriNavigationService 来注册您自定义的 Uri 和导航..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-29T07:25:46.000Z"}],["meta",{"property":"article:author","content":"ClassIsland社区"}],["meta",{"property":"article:modified_time","content":"2024-08-29T07:25:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开发 Uri 导航\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-29T07:25:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ClassIsland社区\\",\\"url\\":\\"https://classisland.tech\\"}]}"]]},"headers":[{"level":2,"title":"注册导航","slug":"注册导航","link":"#注册导航","children":[]},{"level":2,"title":"导航","slug":"导航","link":"#导航","children":[{"level":3,"title":"通过 NavHyperlink","slug":"通过-navhyperlink","link":"#通过-navhyperlink","children":[]},{"level":3,"title":"通过代码导航","slug":"通过代码导航","link":"#通过代码导航","children":[]},{"level":3,"title":"从外部调用","slug":"从外部调用","link":"#从外部调用","children":[]}]}],"git":{"createdTime":1719648014000,"updatedTime":1724916346000,"contributors":[{"name":"hello8693","email":"1320998105@qq.com","commits":1}]},"readingTime":{"minutes":2.79,"words":836},"filePathRelative":"dev/uri-navigation.md","localizedDate":"2024年6月29日","autoDesc":true}');export{N as comp,x as data};
